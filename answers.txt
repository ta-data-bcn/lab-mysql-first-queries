USE appleStore;
SELECT * FROM DATA LIMIT 10; # See structure of table

# Q1: Which are the different genres? 

SELECT DISTINCT(prime_genre) 
FROM DATA;


# Q2: Which is the genre with more apps rated?

SELECT prime_genre, COUNT(*)
FROM DATA
WHERE rating_count_tot!=0
GROUP BY prime_genre
ORDER BY COUNT(*) DESC
LIMIT 1;


# Q3: Which is the genre with more apps?

SELECT prime_genre, COUNT(*)
FROM DATA
GROUP BY prime_genre
ORDER BY COUNT(*) DESC
LIMIT 1;

# Q4. Which is the one with less?

SELECT prime_genre, COUNT(*)
FROM DATA
GROUP BY prime_genre
ORDER BY COUNT(*) ASC
LIMIT 1;


# Q5. Take the 10 apps most rated.

SELECT track_name, rating_count_tot
FROM DATA
ORDER BY rating_count_tot DESC
LIMIT 10;


# Q6. Take the 10 apps best rated by users.

SELECT track_name, user_rating
FROM DATA
ORDER BY user_rating DESC
LIMIT 10;


# Q7. Take a look on the data you retrieved in the question 5. Give some insights.

- Out of the top 10 most rated apps, 4 are games and 3 are social networks. 
- The top 2 most rated apps are two of the most popular social networks (Facebook and Instagram). Pinterest is also in the list at the 6th place. 


# Q8. Take a look on the data you retrieved in the question 6. Give some insights.

- The best rated apps are not very well known to the general public.

# Q9. Now compare the data from questions 5 and 6. What do you see?

- It is not likely that the most rated apps have an extremely high user rating, as more reviews make it harder to consistency get a perfect score. 
- On the other hand, an app with less ratings will be more likely to have a more polarized average rating (either close to 0 or to 5).

# Q10. How could you take the top 3 regarding the user ratings but also the number of votes?

SELECT track_name, `rating_count_tot`, user_rating
FROM DATA
ORDER BY rating_count_tot DESC, user_rating DESC
LIMIT 10;

# Q11. Do people care about the price? Do some queries, comment why are you doing them and the results you retrieve. What is your conclusion?

   Get number of total ratings by track_name and average rating, by price:
SELECT price, SUM(rating_count_tot)/COUNT(track_name), AVG(`user_rating`)
FROM DATA
GROUP BY price
ORDER BY ABS(price) ASC;

   - We see that, on average, cheaper apps have a higher number of ratings. If we take the number of ratings as an indicator of the number of people that have the app, we can conclude that cheaper apps are more downloaded.
   - For apps cheaper than 7.99$, the average rating is between 3-4. For more expensive price ranges, the average rating does take values <3 and >4. As stated in question 9, this is likely the result of the number of ratings of the cheaper apps rather than que quality of the app itself. 